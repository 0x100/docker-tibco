#######################################################################
# Copyright (c) 2002-2016 TIBCO Software Inc.
# All Rights Reserved. Confidential & Proprietary.
# For more information, please contact:
# TIBCO Software Inc.
# Palo Alto, California, USA
#
# TIBCO Enterprise Message Service
#######################################################################


#######################################################################
# Bridges definitions.
#
# This file defines Bridges for destinations.
#
# Bridges can bridge (re-send) messages sent into *source* destinations
# into defined *target* destination. This works as if the application
# sent messages directly into target destinations.
#
# The source bridged destination and the list of targets is defined
# in the bridge definition. Both source and target destinations can
# be both topics and queues.
#
# Consumers on source destinations continue to receive messages
# as they would without presence of the bridge.
#
# Each target destination can be specified with the selector.
# If selector is specified on the target destination, only messages
# qualifying that selector will be bridged from the source destination
# into target destination.
#
# The common syntax of the bridge definition is:
#
# [<des-type>:<dest-name>]
#    <dest-type>=<dest-name> [selector="selector-text"]
#    <dest-type>=<dest-name> [selector="selector-text"]
#
# where <dest-type> is one of keywords "topic" or "queue"
# and <dest-name> is the name of the destination.
#
# Source destination can be wildcarded destinations. This will
# signify that a message published on any topic or queue with name
# matching specified source pattern will be bridged as defined by
# the bridge.
#
# The bridge target can not be a wildcarded destination name.
# 
# Examples:
#
# The following example bridges messages sent into topic
# "source.topic" into queue "target.queue". Notice if there are
# no receivers on the target queue, messages will accumulate in
# the queue as if they were sent directly into the queue.
#
# [topic:source.topic]
#     queue=target.queue
#
# Next example bridges messages sent into any topic matching pattern
# "delivery.*" into queue "deliveries" and also into topic
# "notifications"
#
# [topic:delivery.*]
#     queue=deliveries
#     topic=notifications
#
# Next example modifies previous example by only bridging into
# topic "notification" those messages which have property
# "urgency" set to string "high" or "meduim":
#
# [topic:delivery.*]
#     queue=deliveries
#     topic=notifications selector="urgency in ('high', 'medium')"
#
#######################################################################


